# generated by generate-example-output.sh
---
# Source: llm-d-modelservice/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pvc-hf-llm-d-modelservice
  labels:
    helm.sh/chart: llm-d-modelservice-v0.3.0
    app.kubernetes.io/version: "v0.2.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: llm-d-modelservice/templates/decode-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pvc-hf-llm-d-modelservice-decode
  labels:
    helm.sh/chart: llm-d-modelservice-v0.3.0
    app.kubernetes.io/version: "v0.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      llm-d.ai/inferenceServing: "true"
      llm-d.ai/model: facebook-opt-125m
      llm-d.ai/role: decode
  template:
    metadata:
      labels:
        llm-d.ai/inferenceServing: "true"
        llm-d.ai/model: facebook-opt-125m
        llm-d.ai/role: decode
    spec:
      initContainers:
        - name: routing-proxy
          args:
            - --port=8000
            - --vllm-port=8200
            - --connector=nixlv2
            - -v=5
            - --secure-proxy=false
          image: ghcr.io/llm-d/llm-d-routing-sidecar:v0.2.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          resources: {}
          restartPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
    
      serviceAccountName: pvc-hf-llm-d-modelservice
      
      volumes:
        - emptyDir: {}
          name: metrics-volume
        - name: model-storage
          persistentVolumeClaim:
            claimName: pvc-name
            readOnly: true
      containers:
        - name: vllm
          image: ghcr.io/llm-d/llm-d:v0.2.0
          
          command: ["vllm", "serve"]
          args:
            - facebook/opt-125m
            - --port
            - "8200"
            - --served-model-name
            - "facebook/opt-125m"
            
            - --enforce-eager
            - --kv-transfer-config
            - '{"kv_connector":"NixlConnector", "kv_role":"kv_both"}'
          env:
          - name: CUDA_VISIBLE_DEVICES
            value: "0"
          - name: UCX_TLS
            value: cuda_ipc,cuda_copy,tcp
          - name: VLLM_NIXL_SIDE_CHANNEL_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: VLLM_NIXL_SIDE_CHANNEL_PORT
            value: "5557"
          - name: VLLM_LOGGING_LEVEL
            value: DEBUG
          - name: DP_SIZE
            value: "1"
          - name: TP_SIZE
            value: "1"
          
          - name: HF_HUB_CACHE
            value: /model-cache/path/to/hf_hub_cache
          ports:
          - containerPort: 8200
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          
          resources:
            limits:
              cpu: "16"
              memory: 16Gi
              nvidia.com/gpu: "1"
            requests:
              cpu: "16"
              memory: 16Gi
              nvidia.com/gpu: "1"
          
          volumeMounts:
            - name: model-storage
              mountPath: /model-cache
---
# Source: llm-d-modelservice/templates/prefill-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pvc-hf-llm-d-modelservice-prefill
  labels:
    helm.sh/chart: llm-d-modelservice-v0.3.0
    app.kubernetes.io/version: "v0.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      llm-d.ai/inferenceServing: "true"
      llm-d.ai/model: facebook-opt-125m
      llm-d.ai/role: prefill
  template:
    metadata:
      labels:
        llm-d.ai/inferenceServing: "true"
        llm-d.ai/model: facebook-opt-125m
        llm-d.ai/role: prefill
    spec:
    
      serviceAccountName: pvc-hf-llm-d-modelservice
      
      volumes:
        - emptyDir: {}
          name: metrics-volume
        - name: model-storage
          persistentVolumeClaim:
            claimName: pvc-name
            readOnly: true
      containers:
        - name: vllm
          image: ghcr.io/llm-d/llm-d:v0.2.0
          
          command: ["vllm", "serve"]
          args:
            - facebook/opt-125m
            - --port
            - "8000"
            - --served-model-name
            - "facebook/opt-125m"
            
            - --enforce-eager
            - --kv-transfer-config
            - '{"kv_connector":"NixlConnector", "kv_role":"kv_both"}'
          env:
          - name: CUDA_VISIBLE_DEVICES
            value: "0"
          - name: UCX_TLS
            value: cuda_ipc,cuda_copy,tcp
          - name: VLLM_NIXL_SIDE_CHANNEL_PORT
            value: "5557"
          - name: VLLM_NIXL_SIDE_CHANNEL_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: VLLM_LOGGING_LEVEL
            value: DEBUG
          - name: DP_SIZE
            value: "1"
          - name: TP_SIZE
            value: "1"
          
          - name: HF_HUB_CACHE
            value: /model-cache/path/to/hf_hub_cache
          ports:
          - containerPort: 8000
            protocol: TCP
          - containerPort: 5557
            protocol: TCP
          
          resources:
            limits:
              cpu: "16"
              memory: 16Gi
              nvidia.com/gpu: "1"
            requests:
              cpu: "16"
              memory: 16Gi
              nvidia.com/gpu: "1"
          
          volumeMounts:
            - name: model-storage
              mountPath: /model-cache
