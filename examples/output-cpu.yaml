# generated by generate-example-output.sh
---
# Source: llm-d-modelservice/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cpu-sim-llm-d-modelservice
  labels:
    helm.sh/chart: llm-d-modelservice-v0.3.0
    app.kubernetes.io/version: "v0.2.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: llm-d-modelservice/templates/decode-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cpu-sim-llm-d-modelservice-decode
  labels:
    helm.sh/chart: llm-d-modelservice-v0.3.0
    app.kubernetes.io/version: "v0.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      llm-d.ai/inferenceServing: "true"
      llm-d.ai/model: random-model
      llm-d.ai/role: decode
  template:
    metadata:
      labels:
        llm-d.ai/inferenceServing: "true"
        llm-d.ai/model: random-model
        llm-d.ai/role: decode
    spec:
      initContainers:
        - name: routing-proxy
          args:
            - --port=8000
            - --vllm-port=8200
            - --connector=nixlv2
            - -v=5
            - --secure-proxy=false
          image: ghcr.io/llm-d/llm-d-routing-sidecar:v0.2.0
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          resources: {}
          restartPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
    
      serviceAccountName: cpu-sim-llm-d-modelservice
      
      volumes:
        - emptyDir: {}
          name: metrics-volume
        - name: model-storage
          emptyDir:
            sizeLimit: 5Mi
        
      containers:
        - name: vllm
          image: ghcr.io/llm-d/llm-d-inference-sim:v0.3.0
          
          args:
            - --model
            - random/model
            - --port
            - "8200"
            - --served-model-name
            - "random/model"
          env:
          - name: DP_SIZE
            value: "1"
          - name: TP_SIZE
            value: "1"
          
          - name: HF_HOME
            value: /model-cache
          ports:
          - containerPort: 8200
            protocol: TCP
          
          resources:
            limits:
              {}
            requests:
              {}
          
          volumeMounts:
            - name: model-storage
              mountPath: /model-cache
---
# Source: llm-d-modelservice/templates/prefill-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cpu-sim-llm-d-modelservice-prefill
  labels:
    helm.sh/chart: llm-d-modelservice-v0.3.0
    app.kubernetes.io/version: "v0.2.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      llm-d.ai/inferenceServing: "true"
      llm-d.ai/model: random-model
      llm-d.ai/role: prefill
  template:
    metadata:
      labels:
        llm-d.ai/inferenceServing: "true"
        llm-d.ai/model: random-model
        llm-d.ai/role: prefill
    spec:
    
      serviceAccountName: cpu-sim-llm-d-modelservice
      
      volumes:
        - emptyDir: {}
          name: metrics-volume
        - name: model-storage
          emptyDir:
            sizeLimit: 5Mi
        
      containers:
        - name: vllm
          image: ghcr.io/llm-d/llm-d-inference-sim:v0.3.0
          
          args:
            - --model
            - random/model
            - --port
            - "8000"
            - --served-model-name
            - "random/model"
          env:
          - name: DP_SIZE
            value: "1"
          - name: TP_SIZE
            value: "1"
          
          - name: HF_HOME
            value: /model-cache
          ports:
          - containerPort: 8000
            protocol: TCP
          
          resources:
            limits:
              {}
            requests:
              {}
          
          volumeMounts:
            - name: model-storage
              mountPath: /model-cache
